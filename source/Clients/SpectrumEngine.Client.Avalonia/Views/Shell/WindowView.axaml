<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:rxui="http://reactiveui.net"
        x:Class="SpectrumEngine.Client.Avalonia.Views.Shell.WindowView"
        xmlns:vm="using:SpectrumEngine.Client.Avalonia.ViewModels.Shell"
		xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
		xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		Icon="{Binding Icon}"
		Title="{Binding Title}">

	<Design.DataContext>
		<vm:WindowViewModel/>
	</Design.DataContext>

	<styles:SnackbarHost HostName="Root">
		<styles:NavigationDrawer Name="LeftDrawer" LeftDrawerOpened="{Binding IsMenuOpened, Mode=TwoWay}">
			
			<styles:NavigationDrawer.LeftDrawerContent>
				<!-- menu -->
				<ContentControl Content="{Binding Menu.Value}" />
			</styles:NavigationDrawer.LeftDrawerContent>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
					<RowDefinition Height="30" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<!-- IsBusy indicator -->
				<Border Grid.RowSpan="3" Classes="Busy" IsVisible="{Binding IsBusy}" >
					<ProgressBar Classes="Circle Busy" />
				</Border>

				<!-- toolbar -->
				<ContentControl Grid.Row="0" Content="{Binding ToolBar.Value}" />

				<!-- Content -->
				<ScrollViewer Grid.Row="2"  VerticalScrollBarVisibility="Auto">
					<rxui:RoutedViewHost
						Grid.Row="2" Grid.Column="1"
						Router="{Binding Router}"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Stretch" />
				</ScrollViewer>

				<!-- statusbar -->
				<ContentControl Grid.Row="3" Content="{Binding StatusBar.Value}" />

			</Grid>


		</styles:NavigationDrawer>
	</styles:SnackbarHost>

	<!--<Grid>
		<DockPanel>		

			
			<TextBlock DockPanel.Dock="Bottom" Text="{Binding MachineFrames}" ></TextBlock>
			<TextBlock DockPanel.Dock="Bottom" Text="{Binding MachineControllerState}" ></TextBlock>
			-->
	<!--<local:SpectrumDisplayControl x:Name="SpectrumDisplay"  DockPanel.Dock="Bottom" DataContext="{Binding DisplayViewModel}" />-->
	<!--
		</DockPanel>
	</Grid>-->

</Window>
