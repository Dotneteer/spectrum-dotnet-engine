<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:SpectrumEngine.Client.Avalonia.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="using:SpectrumEngine.Client.Avalonia.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SpectrumEngine.Client.Avalonia.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="SpectrumEngine - ZX Spectrum 48K Emulator"
        Background="{DynamicResource AppBackground}"
        WindowState="{Binding InitialWindowState, Mode=OneTime}"
        DataContextChanged="OnDataContextChanged"
        KeyUp="MainWindowOnKeyUp"
        KeyDown="MainWindowOnKeyDown">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Styles>
        <StyleInclude Source="/Styles/Themes/Styles.axaml" />
    </Window.Styles>
    
    <NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="View">
                <NativeMenu>
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="Show Toolbar" Command="{Binding ToggleShowToolbar}"
                                    ToggleType="CheckBox"
                                    IsChecked="{Binding ViewOptions.ShowToolbar}" />
                    <NativeMenuItem Header="Show Status Bar" Command="{Binding ToggleShowStatusBar}"
                                    ToggleType="CheckBox"
                                    IsChecked="{Binding ViewOptions.ShowStatusBar}"/>
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="Show Keyboard" Command="{Binding ToggleShowKeyboard}"
                                    ToggleType="CheckBox"
                                    IsChecked="{Binding ViewOptions.ShowKeyboard, Mode=TwoWay}"/>
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="Mute Sound" Command="{Binding ToggleMuted}"
                                    ToggleType="CheckBox"
                                    IsChecked="{Binding ViewOptions.IsMuted}"/>
                </NativeMenu>
            </NativeMenuItem>
            <NativeMenuItem Header="Machine">
                <NativeMenu>
                    <NativeMenuItem Header="Start" Command="{Binding Start} "/>
                    <NativeMenuItem Header="Pause" Command="{Binding Pause} "/>
                    <NativeMenuItem Header="Stop" Command="{Binding Stop} "/>
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="Restart" Command="{Binding Restart}" />
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="Debug" Command="{Binding StartDebug}" />
                    <NativeMenuItem Header="Step Into" Command="{Binding StepInto}" />
                    <NativeMenuItem Header="Step Over" Command="{Binding StepOver}" />
                    <NativeMenuItem Header="Step Out" Command="{Binding StepOut}" />
                </NativeMenu>
            </NativeMenuItem>
        </NativeMenu>
    </NativeMenu.Menu>
    
    <Grid>
        <DockPanel>
            
            <!-- Use this menu on Windows -->
            <Menu DockPanel.Dock="Top" IsVisible="{Binding !UseNativeMenu}">
                <MenuItem Header="File">
                    <MenuItem Header="Exit" Click="MenuItem_OnClick" />
                    <MenuItem Header="About" />
                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Header="Show Toolbar" Command="{Binding ToggleShowToolbar}">
                        <MenuItem.Icon>
                            <local:CheckedIndicator IsChecked="{Binding ViewOptions.ShowToolbar}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Show Status Bar" Command="{Binding ToggleShowStatusBar}">
                        <MenuItem.Icon>
                            <local:CheckedIndicator IsChecked="{Binding ViewOptions.ShowStatusBar}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Show Keyboard" Command="{Binding ToggleShowKeyboard}" >
                        <MenuItem.Icon>
                            <local:CheckedIndicator IsChecked="{Binding ViewOptions.ShowKeyboard, Mode=TwoWay}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Mute Sound" Command="{Binding ToggleMuted}">
                        <MenuItem.Icon>
                            <local:CheckedIndicator IsChecked="{Binding ViewOptions.IsMuted}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Machine">
                    <MenuItem Header="Start" Command="{Binding Start}" />
                    <MenuItem Header="Pause" Command="{Binding Pause}" />
                    <MenuItem Header="Stop" Command="{Binding Stop}" />
                    <Separator />
                    <MenuItem Header="Restart" Command="{Binding Restart}" />
                    <Separator />
                    <MenuItem Header="Debug" Command="{Binding StartDebug}" />
                    <MenuItem Header="Step Into" Command="{Binding StepInto}" />
                    <MenuItem Header="Step Over" Command="{Binding StepOver}" />
                    <MenuItem Header="Step Out" Command="{Binding StepOut}" />
                </MenuItem>
            </Menu>
            
            <local:ToolBarUserControl DockPanel.Dock="Top"
                IsVisible="{Binding ViewOptions.ShowToolbar}" />
            <local:StatusBarUserControl DockPanel.Dock="Bottom" 
                IsVisible="{Binding ViewOptions.ShowStatusBar}"/>
            <TextBlock DockPanel.Dock="Bottom" Text="{Binding MachineFrames}" />
            <TextBlock DockPanel.Dock="Bottom" Text="{Binding MachineControllerState}" />
            <local:SpectrumDisplayControl x:Name="SpectrumDisplay" DataContext="{Binding Display}" />
        </DockPanel>
    </Grid>

</Window>
